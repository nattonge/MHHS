dass_scatter %>% ggplot(aes(y=score,x=Subscale,colour=factor(Cuts)))+geom_col()
dass_scatter %>% ggplot(aes(y=score,x=Subscale,fill=factor(Cuts)))+geom_col()
dass_scatter %>% ggplot(aes(y=score,x=Subscale,fill=factor(Cuts)))+geom_bar()
dass_scatter %>% ggplot(aes(fill=factor(Cuts)))+geom_bar()
dass_scatter %>% ggplot(aes(Subscale))+geom_bar(fill=Cuts)
dass_scatter
dass_scatter %>% ggplot(aes(score))+geom_bar(fill=Cuts)
dass_scatter %>% ggplot(aes(score))+geom_bar(fill=factor(Cuts))
dass_scatter %>% ggplot(aes(y=score,x=Subscalefill=factor(Cuts)))+geom_bar()
dass_scatter %>% ggplot(aes(y=score,x=Subscale,fill=factor(Cuts)))+geom_bar()
dass_scatter %>% ggplot(aes(y=score,x=Subscale,fill=factor(Cuts)))
dass_scatter %>% ggplot(aes(y=score,x=Subscale,fill=factor(Cuts)))+geom_col()
dass_scatter %>% ggplot(aes(y=score,x=Subscale,fill=factor(Cuts)))
dass_scatter %>% ggplot(aes(y=score,x=Subscale,fill=factor(Cuts)))
dass_scatter %>% ggplot(aes(y=score,x=Subscale,fill=factor(Cuts)))+geom_bar()
dass_scatter %>% ggplot(aes(y=score,x=Subscale,fill=factor(Cuts)))+geom_boxplot()
dass_scatter %>% ggplot(aes(y=score,x=Subscale,fill=Cuts))+geom_boxplot()
dass_scatter %>% ggplot(aes(y=score,x=Subscale,fill=Cuts))+geom_count()
dass_scatter %>% ggplot(aes(y=score,x=Subscale,fill=Cuts))+geom_dotplot()
dass_scatter %>% ggplot(aes(y=score,x=Subscale,fill=Cuts))+geom_point()
dass_scatter %>% ggplot(aes(y=score,x=Subscale,fill=Cuts))+geom_col()
dass_scatter %>% ggplot(aes(y=score,x=Subscale,fill=Cuts))+geom_bar()
dass_scatter %>% ggplot(aes(y=score,fill=Cuts))+geom_bar()
dass_scatter %>% ggplot(aes(score,fill=Cuts))+geom_bar()
dass_scatter %>% ggplot(aes(Subscale,fill=Cuts))+geom_bar()
dass_scatter %>% ggplot(aes(score,fill=Cuts))+geom_bar()
dass_scatter %>% filter(Subscale=="Dass21_Anxiety") %>% ggplot(aes(y=score))+geom_point()
#severity histogram colored by severity
dass_scatter %>% ggplot(aes(score,group=Cuts))+geom_bar()
#severity histogram colored by severity
dass_scatter %>% ggplot(aes(score,fill=Cuts,group=Cuts))+geom_bar()
#severity histogram colored by severity
dass_scatter %>% ggplot(aes(score,fill=Cuts,group=Subscale))+geom_bar()
#severity histogram colored by severity
dass_scatter %>% ggplot(aes(score,fill=Subscale,group=Subscale))+geom_bar()
#severity histogram colored by severity
dass_scatter %>% ggplot(aes(score,fill=Subscale,group=Cuts))+geom_bar()
#severity histogram colored by severity
dass_scatter %>% ggplot(aes(score,fill=Subscale,group=Subscale))+geom_bar()
dass_scatter %>% filter(Subscale=="Dass21_Anxiety") %>% ggplot(aes(y=score))+geom_point()
dass_scatter %>% ggplot(aes(x=Subscale,y=score))+geom_jitter()
dass_scatter %>% ggplot(aes(x=Subscale,y=score,colour=Subscale))+geom_jitter()
dass_scatter
dass_scatter %>% ggplot(aes(x=Subscale,y=score,colour=Cuts))+geom_jitter()
dass_scatter %>% ggplot(aes(x=Subscale,y=score,colour=Cuts))+geom_jitter()+theme_classic()
dass_scatter %>% ggplot(aes(x=Subscale,y=score,colour=Cuts))+geom_jitter()+theme_classic()+scale_color_brewer(palette = "Greens")
dass_scatter %>% ggplot(aes(x=Subscale,y=score,colour=Cuts))+geom_jitter()+theme_classic()+scale_color_brewer(palette = "Spectral")
dass_scatter %>% ggplot(aes(x=Subscale,y=score,colour=Cuts))+geom_jitter()+theme_classic()+scale_color_brewer(palette = "Set1")
dass_scatter %>% ggplot(aes(x=Subscale,y=score,colour=Cuts))+geom_jitter()+theme_dark()+scale_color_brewer(palette = "Set1")
dass_scatter %>% ggplot(aes(x=Subscale,y=score,colour=Cuts))+geom_jitter()+theme_classic()+scale_color_brewer(palette = "Set1")
ismi<-mhhs_data %>% select(contains("ISMI"))
ismi<-ismi %>% rowwise() %>%
mutate(ISMI_Alientation=sum(ISMI29_1,ISMI29_5,ISMI29_8,ISMI29_16,ISMI29_17,ISMI29_21),
ISMI_Stere=sum(ISMI29_2, ISMI29_6,ISMI29_10,ISMI29_18,ISMI29_19,ISMI29_23,ISMI29_29),
ISMI_Discr=sum(ISMI29_3,ISMI29_15,ISMI29_22,ISMI29_25,ISMI29_28),
ISMI_Withdrawal=sum(ISMI29_4,ISMI29_9,ISMI29_11,ISMI29_12,ISMI29_13,ISMI29_20)) %>%
mutate(ISMI29_7=recode(ISMI29_7,`1`=4,`2`=3,`3`=2,`4`=1),
ISMI29_14=recode(ISMI29_14,`1`=4,`2`=3,`3`=2,`4`=1),
ISMI29_24=recode(ISMI29_24,`1`=4,`2`=3,`3`=2,`4`=1),
ISMI29_26=recode(ISMI29_26,`1`=4,`2`=3,`3`=2,`4`=1),
ISMI29_27=recode(ISMI29_27,`1`=4,`2`=3,`3`=2,`4`=1)) %>%
mutate(ISMI_Stigmar=sum(ISMI29_7,ISMI29_14,ISMI29_24,ISMI29_26,ISMI29_27)) %>%
ungroup()
#make a dataframe with only the items to be scored/that need reliability
ismi_scoring<-ismi %>% dplyr::select(ISMI29_1:ISMI29_29)
key_ismi.list<-list(Alien=c(1,5,8,16,17,21),Stereotype=c(2,6,10,18,19,23,29),Discrimination=c(3,15,22,25,28),Withdrawal=c(4,9,11,12,13,20),StigmaR=c(7,14,24,26,27))
key_ismi<-make.keys(29,key_ismi.list,colnames(ismi_scoring))
scales_ismi<-scoreItems(key_ismi.list,ismi_scoring)
summary(scales_ismi)
ismi$ISMI29_14
cor(ismi$ISMI_Stigmar,ismi$ISMI_Alientation,use="complete.obs")
ismi %>% select(ISMI_Alientation,ISMI_Stere,ISMI_Discr,ISMI_Withdrawal) %>% gather()
ismi %>% select(ISMI_Alientation,ISMI_Stere,ISMI_Discr,ISMI_Withdrawal) %>% gather() %>%  ggplot(aes(value,fill=key))+geom_bar()
ismi %>% select(ISMI_Alientation,ISMI_Stere,ISMI_Discr,ISMI_Withdrawal) %>% gather() %>%  ggplot(aes(value,fill=key))+geom_jitter()
ismi %>% select(ISMI_Alientation,ISMI_Stere,ISMI_Discr,ISMI_Withdrawal) %>% gather() %>%  ggplot(aes(x=value,y=key))+geom_jitter()
ismi %>% select(ISMI_Alientation,ISMI_Stere,ISMI_Discr,ISMI_Withdrawal) %>% gather() %>%  ggplot(aes(y=value,x=key))+geom_jitter()
ismi %>% select(ISMI_Alientation,ISMI_Stere,ISMI_Discr,ISMI_Withdrawal) %>% gather() %>%  ggplot(aes(y=value,x=key,color=value))+geom_jitter()
ismi %>% select(ISMI_Alientation,ISMI_Stere,ISMI_Discr,ISMI_Withdrawal) %>% gather() %>%  ggplot(aes(y=value,x=key,color=value))+geom_boxplot()
ismi %>% select(ISMI_Alientation,ISMI_Stere,ISMI_Discr,ISMI_Withdrawal) %>% gather() %>%  ggplot(aes(y=value,x=key,color=value))+geom_boxplot()+geom_jitter()
ismi %>% select(ISMI_Alientation,ISMI_Stere,ISMI_Discr,ISMI_Withdrawal,ISMI_Stigmar) %>% gather() %>%  ggplot(aes(y=value,x=key,color=value))+geom_boxplot()+geom_jitter()
mhhs_data<-read.csv("../../03-ProcessData/MHHS_01182023_cleanheader.csv")
# Know the range of possible answers for each factor and make sure to include NA
mhhs_demotbl<-mhhs_data %>% select(Race_Ethn2,BIC_1,LANG_1,EDUC_Par,EDUC_Self,GENDER,SEXOR,MILIT) %>%
mutate(
Race_Ethn2=factor(Race_Ethn2,levels=c(NA,1,2,3,4,5,6,7),labels=c("Not answered","White","Black","Hispanic","Asian","AmerIndian","PacificIslander","Multiracial"),exclude=NULL),
BIC_1=factor(BIC_1, levels=c(NA,0,1),labels=c("Not answered","NotBicultural","Bicultural"),exclude=NULL),
LANG_1=factor(LANG_1, levels=c(NA,0,1),labels=c("Not Answered","English at Home","Additional Language at Home"),exclude=NULL),
EDUC_Par=factor(EDUC_Par,levels=c(NA,1,2,3,4,5,6,7),labels = c("Not answered","<High School","High School","Some college","Associates","Bachelors","Masters","Doctoral/Professional"),exclude = NULL),
EDUC_Self=factor(EDUC_Self,levels=c(NA,1,2,3,4,5,6,7),labels = c("Not answered","<High School","High School","Some college","Associates","Bachelors","Masters","Doctoral/Professional"),exclude=NULL),
GENDER=factor(GENDER,levels=c(NA,1,2,3,4,5,6,7),labels=c("Not answered","cis-woman","cis-man","trans woman","trans man","non-binary","self-id","prefer not to respond"),exclude=NULL),
SexualOrientation=factor(SEXOR, levels=c(NA,1,2,3,4,5,6,7,8), labels = c("Not Answered","Straight","Bisexual","Gay","Lesbian","Queer","Questioning","Self-ID","Prefer not to respond"),exclude = NULL),
MilitaryService=factor(MILIT,levels=c(NA,1,2,3,4,5,6,7,8),labels=c("Not answered","Never Served","Active Duty","National Guard","Military Spouse","Military Dependent","Veteran","Other","Prefer not to respond"),exclude=NULL)) %>%
select(-MILIT,-SEXOR)
CreateTableOne(data=mhhs_demotbl)
setwd("C:/Users/Natas/Gaia/ResearchProjects/AIM-AHEAD")
setwd("C:/Users/Natas/Gaia/ResearchProjects/AIM-AHEAD")
load("C:/Users/Natas/Gaia/ResearchProjects/AIM-AHEAD/d_icd_diagnoses.csv.gz")
gzfile("d_icd_diagnoses.csv.gz")
gunzip("d_icd_diagnoses.csv.gz")
?gzfile
unz("d_icd_diagnoses.csv.gz")
unz(filename="d_icd_diagnoses.csv.gz")
unz(description="",filename="d_icd_diagnoses.csv.gz")
read.table(gzfile("d_icd_diagnoses.csv.gz"))
library(R.utils)
gunzip("d_icd_diagnoses.csv.gz"))
gunzip("d_icd_diagnoses.csv.gz")
ddi<-mhhs_data %>% select(contains("DDI"))
ddi
ddi %>% mutate(DDI_2r=6-DDI_2, DDI4r=6-DDI_4, DDI_5r= 6-DDI_5, DDI_8r= 6-DDI_8, DDI_9r = 6-DDI_9, DDI_10r=6-DDI_10) %>%
rowwise() %>% sum(DDI_1,DDI_2r,DDI_3,DDI_4r,DDI_5r,DDI_6,DDI_7,DDI_8r,DDI_9r,DDI_10r,DDI_11,DDI_12)
ddi
ddi %>% mutate(DDI_2r=6-DDI_2, DDI4r=6-DDI_4, DDI_5r= 6-DDI_5, DDI_8r= 6-DDI_8, DDI_9r = 6-DDI_9, DDI_10r=6-DDI_10) %>%
rowwise() %>% mutate(DDI_Total=sum(DDI_1,DDI_2r,DDI_3,DDI_4r,DDI_5r,DDI_6,DDI_7,DDI_8r,DDI_9r,DDI_10r,DDI_11,DDI_12))
ddi %>% mutate(DDI_2r=6-DDI_2, DDI_4r=6-DDI_4, DDI_5r= 6-DDI_5, DDI_8r= 6-DDI_8, DDI_9r = 6-DDI_9, DDI_10r=6-DDI_10) %>%
rowwise() %>% mutate(DDI_Total=sum(DDI_1,DDI_2r,DDI_3,DDI_4r,DDI_5r,DDI_6,DDI_7,DDI_8r,DDI_9r,DDI_10r,DDI_11,DDI_12))
ddi<-mhhs_data %>% select(contains("DDI"))
ddi<-ddi %>% mutate(DDI_2r=6-DDI_2, DDI_4r=6-DDI_4, DDI_5r= 6-DDI_5, DDI_8r= 6-DDI_8, DDI_9r = 6-DDI_9, DDI_10r=6-DDI_10) %>%
rowwise() %>% mutate(DDI_Total=sum(DDI_1,DDI_2r,DDI_3,DDI_4r,DDI_5r,DDI_6,DDI_7,DDI_8r,DDI_9r,DDI_10r,DDI_11,DDI_12)) %>%
ungroup()
ddi<-ddi %>% mutate(across(c(DDI_2,DDI_4,DDI_5,DDI_8,DDI_9,DDI_10),~6-.)) %>%
rowwise() %>% mutate(DDI_Total=sum(DDI_1:DDI_12)) %>%
ungroup()
ddi<-mhhs_data %>% select(contains("DDI"))
ddi<-ddi %>% mutate(across(c(DDI_2,DDI_4,DDI_5,DDI_8,DDI_9,DDI_10),~6-.)) %>%
rowwise() %>% mutate(DDI_Total=sum(DDI_1:DDI_12)) %>%
ungroup()
ddi<-ddi %>% mutate(across(c(DDI_2,DDI_4,DDI_5,DDI_8,DDI_9,DDI_10),~6-.)) %>%
rowwise() %>% mutate(DDI_Total=sum(c_across(DDI_1:DDI_12))) %>%
ungroup()
ddi<-mhhs_data %>% select(contains("DDI"))
ddi<-ddi %>% mutate(across(c(DDI_2,DDI_4,DDI_5,DDI_8,DDI_9,DDI_10),~6-.)) %>%
rowwise() %>% mutate(DDI_Total=sum(c_across(DDI_1:DDI_12))) %>%
ungroup()
ddi
ddi_scoring<-ddi %>% dplyr::select(DDI_1:DDI_12)
key_ddi.list<-list(Total=c(1:12))
key_ddi<-make.keys(12,key_ddi.list,colnames(ddi_scoring))
scales_ddi<-scoreItems(key_ddi.list,ddi_scoring)
summary(scales_ddi)
ismi<-mhhs_data %>% select(contains("ISMI"))
ismi<-ismi %>% rowwise() %>%
mutate(ISMI_Alientation=sum(ISMI29_1,ISMI29_5,ISMI29_8,ISMI29_16,ISMI29_17,ISMI29_21),
ISMI_Stere=sum(ISMI29_2, ISMI29_6,ISMI29_10,ISMI29_18,ISMI29_19,ISMI29_23,ISMI29_29),
ISMI_Discr=sum(ISMI29_3,ISMI29_15,ISMI29_22,ISMI29_25,ISMI29_28),
ISMI_Withdrawal=sum(ISMI29_4,ISMI29_9,ISMI29_11,ISMI29_12,ISMI29_13,ISMI29_20)) %>%
mutate(ISMI29_7=recode(ISMI29_7,`1`=4,`2`=3,`3`=2,`4`=1),
ISMI29_14=recode(ISMI29_14,`1`=4,`2`=3,`3`=2,`4`=1),
ISMI29_24=recode(ISMI29_24,`1`=4,`2`=3,`3`=2,`4`=1),
ISMI29_26=recode(ISMI29_26,`1`=4,`2`=3,`3`=2,`4`=1),
ISMI29_27=recode(ISMI29_27,`1`=4,`2`=3,`3`=2,`4`=1)) %>%
mutate(ISMI_Stigmar=sum(ISMI29_7,ISMI29_14,ISMI29_24,ISMI29_26,ISMI29_27)) %>%
ungroup()
#make a dataframe with only the items to be scored/that need reliability
ismi_scoring<-ismi %>% dplyr::select(ISMI29_1:ISMI29_29)
key_ismi.list<-list(Alien=c(1,5,8,16,17,21),Stereotype=c(2,6,10,18,19,23,29),Discrimination=c(3,15,22,25,28),Withdrawal=c(4,9,11,12,13,20),StigmaR=c(7,14,24,26,27))
key_ismi<-make.keys(29,key_ismi.list,colnames(ismi_scoring))
scales_ismi<-scoreItems(key_ismi.list,ismi_scoring)
summary(scales_ismi)
ismi$ISMI29_14
cor(ismi$ISMI_Stigmar,ismi$ISMI_Alientation,use="complete.obs")
ismi %>% select(ISMI_Alientation,ISMI_Stere,ISMI_Discr,ISMI_Withdrawal,ISMI_Stigmar) %>% gather() %>%  ggplot(aes(y=value,x=key,color=value))+geom_boxplot()+geom_jitter()
ghsql<-mhhs_data %>% select(contains("GHSQL"))
ghsql<-ghsql %>% mutate(General=rowSums((select(ghsql,GHSQL_Pers_1:GHSQL_Pers_9,GHSQL_SUI_1:GHSQL_SUI_9)))) %>%
rowwise() %>%
mutate(Personal=sum(c_across(GHSQL_Pers_1:GHSQL_Pers_8)),
Suicide=sum(c_across(GHSQL_SUI_1:GHSQL_SUI_8)),
Informal_all=sum(c(GHSQL_Pers_1,GHSQL_SUI_1,GHSQL_Pers_2,GHSQL_SUI_2,GHSQL_Pers_3,GHSQL_SUI_3,GHSQL_Pers_4,GHSQL_SUI_4)),
Formal_all=sum(c(GHSQL_Pers_5,GHSQL_SUI_5,GHSQL_Pers_6,GHSQL_SUI_6,GHSQL_Pers_7,GHSQL_SUI_7,GHSQL_Pers_8,GHSQL_SUI_8)),
None_all=sum(c(GHSQL_Pers_9,GHSQL_SUI_9))) %>%
ungroup() %>% #remove rowwise grouping
mutate(Personal_z=scale(Personal),Suicide_z=scale(Suicide),Informal_all_z=scale(Informal_all),Formal_all_z=scale(Formal_all),None_all_z=scale(None_all))
#make a dataframe with only the items to be scored/that need reliability
ghsql_scoring<-ghsql %>% dplyr::select(1:9,12:20)
key_ghsql.list<-list(General=c(1:18),Personal=c(1:9),Suicide=c(10:18),Formal=c(5,14,6,15,7,16,8,17),Informal=c(1,10,2,11,3,12,4,13))
key_ghsql<-make.keys(18,key_ghsql.list,colnames(ghsql_scoring))
scales_ghsql<-scoreItems(key_ghsql.list,ghsql_scoring)
summary(scales_ghsql)
#histogram to explore the range
ghsql %>% select(GHSQL_Pers_1:GHSQL_Pers_9) %>% gather() %>% ggplot(aes(y=value,x=key)) + geom_boxplot() + scale_x_discrete(labels=c("Intimate partner", "Friend","Parent","Other relative","MHP","Phone helpline","Doctor","Minister","Not seek help"))+ theme(axis.text.x = element_text(angle=90))
ghsql %>% select(GHSQL_SUI_1:GHSQL_SUI_9) %>% gather() %>% ggplot(aes(y=value,x=key)) + geom_boxplot() + scale_x_discrete(labels=c("Intimate partner", "Friend","Parent","Other relative","MHP","Phone helpline","Doctor","Minister","Not seek help"))+ theme(axis.text.x = element_text(angle=90))
ghsql %>% select(Informal_all_z,Formal_all_z,None_all_z) %>% gather() %>% ggplot(aes(y=value,x=key)) + geom_boxplot() + scale_x_discrete(labels=c("Informal (Pers + Sui)","Formal (Pers + Sui)","None (Pers + Sui)"))+ theme(axis.text.x = element_text(angle=90))
cor.test(ddi$DDI_Total,ghsql$General)
cor.test(ddi$DDI_Total,ghsql$Personal)
cor.test(ddi$DDI_Total,ghsql$Suicide)
cor.test(ddi$DDI_Total,ghsql$None_all)
ismi<-mhhs_data %>% select(contains("ISMI"))
ismi<-ismi %>% rowwise() %>%
mutate(ISMI_Alientation=sum(ISMI29_1,ISMI29_5,ISMI29_8,ISMI29_16,ISMI29_17,ISMI29_21),
ISMI_Stere=sum(ISMI29_2, ISMI29_6,ISMI29_10,ISMI29_18,ISMI29_19,ISMI29_23,ISMI29_29),
ISMI_Discr=sum(ISMI29_3,ISMI29_15,ISMI29_22,ISMI29_25,ISMI29_28),
ISMI_Withdrawal=sum(ISMI29_4,ISMI29_9,ISMI29_11,ISMI29_12,ISMI29_13,ISMI29_20)) %>%
mutate(ISMI29_7=recode(ISMI29_7,`1`=4,`2`=3,`3`=2,`4`=1),
ISMI29_14=recode(ISMI29_14,`1`=4,`2`=3,`3`=2,`4`=1),
ISMI29_24=recode(ISMI29_24,`1`=4,`2`=3,`3`=2,`4`=1),
ISMI29_26=recode(ISMI29_26,`1`=4,`2`=3,`3`=2,`4`=1),
ISMI29_27=recode(ISMI29_27,`1`=4,`2`=3,`3`=2,`4`=1)) %>%
mutate(ISMI_Stigmar=sum(ISMI29_7,ISMI29_14,ISMI29_24,ISMI29_26,ISMI29_27)) %>%
ungroup()
#make a dataframe with only the items to be scored/that need reliability
ismi_scoring<-ismi %>% dplyr::select(ISMI29_1:ISMI29_29)
key_ismi.list<-list(Alien=c(1,5,8,16,17,21),Stereotype=c(2,6,10,18,19,23,29),Discrimination=c(3,15,22,25,28),Withdrawal=c(4,9,11,12,13,20),StigmaR=c(7,14,24,26,27))
key_ismi<-make.keys(29,key_ismi.list,colnames(ismi_scoring))
scales_ismi<-scoreItems(key_ismi.list,ismi_scoring)
summary(scales_ismi)
ismi$ISMI29_14
cor(ismi$ISMI_Stigmar,ismi$ISMI_Alientation,use="complete.obs")
ismi %>% select(ISMI_Alientation,ISMI_Stere,ISMI_Discr,ISMI_Withdrawal,ISMI_Stigmar) %>% gather() %>%  ggplot(aes(y=value,x=key,color=value))+geom_boxplot()+geom_jitter()
ghsql<-mhhs_data %>% select(contains("GHSQL"))
ghsql<-ghsql %>% mutate(General=rowSums((select(ghsql,GHSQL_Pers_1:GHSQL_Pers_9,GHSQL_SUI_1:GHSQL_SUI_9)))) %>%
rowwise() %>%
mutate(Personal=sum(c_across(GHSQL_Pers_1:GHSQL_Pers_8)),
Suicide=sum(c_across(GHSQL_SUI_1:GHSQL_SUI_8)),
Informal_all=sum(c(GHSQL_Pers_1,GHSQL_SUI_1,GHSQL_Pers_2,GHSQL_SUI_2,GHSQL_Pers_3,GHSQL_SUI_3,GHSQL_Pers_4,GHSQL_SUI_4)),
Formal_all=sum(c(GHSQL_Pers_5,GHSQL_SUI_5,GHSQL_Pers_6,GHSQL_SUI_6,GHSQL_Pers_7,GHSQL_SUI_7,GHSQL_Pers_8,GHSQL_SUI_8)),
None_all=sum(c(GHSQL_Pers_9,GHSQL_SUI_9))) %>%
ungroup() %>% #remove rowwise grouping
mutate(Personal_z=scale(Personal),Suicide_z=scale(Suicide),Informal_all_z=scale(Informal_all),Formal_all_z=scale(Formal_all),None_all_z=scale(None_all))
#make a dataframe with only the items to be scored/that need reliability
ghsql_scoring<-ghsql %>% dplyr::select(1:9,12:20)
key_ghsql.list<-list(General=c(1:18),Personal=c(1:9),Suicide=c(10:18),Formal=c(5,14,6,15,7,16,8,17),Informal=c(1,10,2,11,3,12,4,13))
key_ghsql<-make.keys(18,key_ghsql.list,colnames(ghsql_scoring))
scales_ghsql<-scoreItems(key_ghsql.list,ghsql_scoring)
summary(scales_ghsql)
#histogram to explore the range
ghsql %>% select(GHSQL_Pers_1:GHSQL_Pers_9) %>% gather() %>% ggplot(aes(y=value,x=key)) + geom_boxplot() + scale_x_discrete(labels=c("Intimate partner", "Friend","Parent","Other relative","MHP","Phone helpline","Doctor","Minister","Not seek help"))+ theme(axis.text.x = element_text(angle=90))
ghsql %>% select(GHSQL_SUI_1:GHSQL_SUI_9) %>% gather() %>% ggplot(aes(y=value,x=key)) + geom_boxplot() + scale_x_discrete(labels=c("Intimate partner", "Friend","Parent","Other relative","MHP","Phone helpline","Doctor","Minister","Not seek help"))+ theme(axis.text.x = element_text(angle=90))
ghsql %>% select(Informal_all_z,Formal_all_z,None_all_z) %>% gather() %>% ggplot(aes(y=value,x=key)) + geom_boxplot() + scale_x_discrete(labels=c("Informal (Pers + Sui)","Formal (Pers + Sui)","None (Pers + Sui)"))+ theme(axis.text.x = element_text(angle=90))
ghsql %>% add_column(ismi)
# Know the range of possible answers for each factor and make sure to include NA
mhhs_demotbl<-mhhs_data %>% select(Race_Ethn2,BIC_1,LANG_1,EDUC_Par,EDUC_Self,GENDER,SEXOR,MILIT) %>%
mutate(
Race_Ethn2=factor(Race_Ethn2,levels=c(NA,1,2,3,4,5,6,7),labels=c("Not answered","White","Black","Hispanic","Asian","AmerIndian","PacificIslander","Multiracial"),exclude=NULL),
BIC_1=factor(BIC_1, levels=c(NA,0,1),labels=c("Not answered","NotBicultural","Bicultural"),exclude=NULL),
LANG_1=factor(LANG_1, levels=c(NA,0,1),labels=c("Not Answered","English at Home","Additional Language at Home"),exclude=NULL),
EDUC_Par=factor(EDUC_Par,levels=c(NA,1,2,3,4,5,6,7),labels = c("Not answered","<High School","High School","Some college","Associates","Bachelors","Masters","Doctoral/Professional"),exclude = NULL),
EDUC_Self=factor(EDUC_Self,levels=c(NA,1,2,3,4,5,6,7),labels = c("Not answered","<High School","High School","Some college","Associates","Bachelors","Masters","Doctoral/Professional"),exclude=NULL),
GENDER=factor(GENDER,levels=c(NA,1,2,3,4,5,6,7),labels=c("Not answered","cis-woman","cis-man","trans woman","trans man","non-binary","self-id","prefer not to respond"),exclude=NULL),
SexualOrientation=factor(SEXOR, levels=c(NA,1,2,3,4,5,6,7,8), labels = c("Not Answered","Straight","Bisexual","Gay","Lesbian","Queer","Questioning","Self-ID","Prefer not to respond"),exclude = NULL),
MilitaryService=factor(MILIT,levels=c(NA,1,2,3,4,5,6,7,8),labels=c("Not answered","Never Served","Active Duty","National Guard","Military Spouse","Military Dependent","Veteran","Other","Prefer not to respond"),exclude=NULL)) %>%
select(-MILIT,-SEXOR)
CreateTableOne(data=mhhs_demotbl)
ghsql %>% add_column(ismi,mhhs_demotbl)
quicktable<-ghsql %>% add_column(ismi,mhhs_demotbl)
mhhs_demotbl
chisq.test(Race_Ethn2,ghsql$Personal)
chisq.test(Race_Ethn2,ghsql$Personal,data=quicktable)
with(chisq.test(Race_Ethn2,ghsql$Personal),quicktable)
with(chisq.test(quicktable$Race_Ethn2,quicktable$Personal))
with(chisq.test(quicktable$Race_Ethn2,quicktable$Personal),na.rm=TRUE)
chisq.test
chisq.test(quicktable$Race_Ethn2,quicktable$Personal,na.rm=TRUE)
?chisq.test
?chisq.test
anova(quicktable$Race_Ethn2,quicktable$Personal,na.rm=TRUE)
anova(quicktable$Personal~quicktable$Race_Ethn2,na.rm=TRUE)
?anova
library(base)
?anova
?anova.psych
library(stats)
anova(quicktable$Personal~quicktable$Race_Ethn2,na.rm=TRUE)
quicktable<-ghsql %>% add_column(ismi,mhhs_demotbl)
anova(quicktable$Personal~quicktable$Race_Ethn2,na.rm=TRUE)
library(stats)
library(base)
anova(quicktable$Personal~quicktable$Race_Ethn2,na.rm=TRUE)
?anova
?anova
library(psych)
library(tidyverse)
library(apaTables)
library(tableone)
library(dplyr)
lm(quicktable$Personal~quicktable$Race_Ethn2,na.rm=TRUE)
aov(lm(quicktable$Personal~quicktable$Race_Ethn2,na.rm=TRUE))
summary(aov(lm(quicktable$Personal~quicktable$Race_Ethn2,na.rm=TRUE)))
summary(aov(lm(quicktable$Suicide~quicktable$Race_Ethn2,na.rm=TRUE)))
summary(aov(lm(quicktable$Informal_all~quicktable$Race_Ethn2,na.rm=TRUE)))
summary(aov(lm(quicktable$Formal_all~quicktable$Race_Ethn2,na.rm=TRUE)))
summary(aov(lm(quicktable$Formal_all~quicktable$BIC_1,na.rm=TRUE)))
summary(aov(lm(quicktable$Formal_all~quicktable$None_all_z,na.rm=TRUE)))
summary(aov(lm(quicktable$Formal_all~quicktable$ISMI_Stigmar,na.rm=TRUE)))
summary(aov(lm(quicktable$Informal_all~quicktable$ISMI_Stigmar,na.rm=TRUE)))
summary(aov(lm(quicktable$Formal_all~quicktable$ISMI_Alientation,na.rm=TRUE)))
summary(aov(lm(quicktable$Formal_all~quicktable$ISMI_Stere,na.rm=TRUE)))
summary(aov(lm(quicktable$Formal_all~quicktable$ISMI_Discr)))
summary(aov(lm(quicktable$Formal_all~quicktable$GENDER)))
summary(aov(lm(quicktable$Formal_all~quicktable$SexualOrientation)))
summary(aov(lm(quicktable$Formal_all~quicktable$MilitaryService)))
summary(aov(lm(quicktable$Suicide~quicktable$MilitaryService)))
summary(aov(lm(quicktable$Suicide~quicktable$SexualOrientation)))
summary(aov(lm(quicktable$Suicide~quicktable$BIC_1)))
summary(aov(lm(quicktable$Suicide~quicktable$EDUC_Par)))
summary(aov(lm(quicktable$Suicide~quicktable$EDUC_Self)))
mhhs_demotbl
quicktable<-ghsql %>% add_column(ismi,mhhs_demotbl) %>% filter(Race_Ethn2="Black")
quicktable<-ghsql %>% add_column(ismi,mhhs_demotbl) %>% filter(Race_Ethn2=="Black")
quicktable
summary(aov(lm(quicktable$Suicide~quicktable$Race_Ethn2)))
quicktable<-ghsql %>% add_column(ismi,mhhs_demotbl) %>% filter(Race_Ethn2=="Black"|Race_Ethn2=="White")
summary(aov(lm(quicktable$Suicide~quicktable$Race_Ethn2)))
summary(aov(lm(quicktable$Personal~quicktable$Race_Ethn2)))
quicktable<-ghsql %>% add_column(ismi,mhhs_demotbl) %>% filter(Race_Ethn2=="Black")
summary(aov(lm(quicktable$Personal~quicktable$Race_Ethn2)))
summary(aov(lm(quicktable$Personal~quicktable$ISMI_Discr)))
quicktable
quicktable<-ghsql %>% add_column(ismi,mhhs_demotbl) %>% filter(Race_Ethn2=="Black") %>% select(General,Personal,Suicide,Informal_all,Formal_all,None_all,ISMI_Alientation,ISMI_Stere,ISMI_Discr,ISMI_Withdrawal,ISMI_Stigmar,BIC_1)
corPlot(quicktable)
quicktable
quicktable<-ghsql %>% add_column(ismi,mhhs_demotbl) %>% filter(Race_Ethn2=="Black") %>% select(General,Personal,Suicide,Informal_all,Formal_all,None_all,ISMI_Alientation,ISMI_Stere,ISMI_Discr,ISMI_Withdrawal,ISMI_Stigmar)
corPlot(quicktable)
corPlot(quicktable,scale=TRUE,stars=FALSE, xlas=2, cex=1)
corPlot(quicktable,scale=TRUE,stars=FALSE, xlas=2, cex=1,pval = FALSE)
corPlot(quicktable,stars=FALSE, xlas=2, cex=1,scale = FALSE)
corPlot(quicktable,stars=TRUE, xlas=2, cex=1,scale = FALSE)
corPlot(quicktable,stars=TRUE, xlas=2, cex=.3,scale = FALSE)
quicktable<-ghsql %>% add_column(ismi,mhhs_demotbl) %>% filter(Race_Ethn2=="White") %>% select(General,Personal,Suicide,Informal_all,Formal_all,None_all,ISMI_Alientation,ISMI_Stere,ISMI_Discr,ISMI_Withdrawal,ISMI_Stigmar)
corPlot(quicktable,stars=TRUE, xlas=2, cex=.3,scale = FALSE)
quicktable<-ghsql %>% add_column(ismi,mhhs_demotbl) %>% filter(Race_Ethn2=="Black") %>% select(General,Personal,Suicide,Informal_all,Formal_all,None_all,ISMI_Alientation,ISMI_Stere,ISMI_Discr,ISMI_Withdrawal,ISMI_Stigmar)
corPlot(quicktable,stars=TRUE, xlas=2, cex=.3,scale = FALSE)
quicktable<-ghsql %>% add_column(ismi,mhhs_demotbl) %>% #filter(Race_Ethn2=="Black") %>% select(General,Personal,Suicide,Informal_all,Formal_all,None_all,ISMI_Alientation,ISMI_Stere,ISMI_Discr,ISMI_Withdrawal,ISMI_Stigmar)
corPlot(quicktable,stars=TRUE, xlas=2, cex=.3,scale = FALSE)
quicktable<-ghsql %>% add_column(ismi,mhhs_demotbl) %>% #filter(Race_Ethn2=="Black") %>%
select(General,Personal,Suicide,Informal_all,Formal_all,None_all,ISMI_Alientation,ISMI_Stere,ISMI_Discr,ISMI_Withdrawal,ISMI_Stigmar)
corPlot(quicktable,stars=TRUE, xlas=2, cex=.3,scale = FALSE)
lm(General~Race_Ethni2+ISMI_ALienation+ISMI_Discr,data=quicktable)
lm(General~Race_Ethn2+ISMI_ALienation+ISMI_Discr,data=quicktable)
quicktable<-ghsql %>% add_column(ismi,mhhs_demotbl) %>% #filter(Race_Ethn2=="Black") %>%
select(General,Personal,Suicide,Informal_all,Formal_all,None_all,ISMI_Alientation,ISMI_Stere,ISMI_Discr,ISMI_Withdrawal,ISMI_Stigmar,Race_Ethn2)
lm(General~Race_Ethn2+ISMI_ALienation+ISMI_Discr,data=quicktable)
lm(General~Race_Ethn2+ISMI_Alienation+ISMI_Discr,data=quicktable)
lm(General~Race_Ethn2+ISMI_Alientation+ISMI_Discr,data=quicktable)
summary(lm(General~Race_Ethn2+ISMI_Alientation+ISMI_Discr,data=quicktable))
summary(lm(Suicide~Race_Ethn2+ISMI_Alientation+ISMI_Discr,data=quicktable))
summary(lm(Informal_all~Race_Ethn2+ISMI_Alientation+ISMI_Discr,data=quicktable))
summary(lm(Informal_all~Race_Ethn2*ISMI_Alientation+ISMI_Discr,data=quicktable))
summary(lm(Informal_all~Race_Ethn2*ISMI_Alientation+Race_Ethn2*ISMI_Discr,data=quicktable))
summary(lm(Informal_all~Race_Ethn2*ISMI_Discr,data=quicktable))
summary(lm(Informal_all~Race_Ethn2*ISMI_Stere,data=quicktable))
summary(lm(Formal_all~Race_Ethn2*ISMI_Stere,data=quicktable))
summary(lm(General~Race_Ethn2*ISMI_Stere,data=quicktable))
summary(lm(None_all~Race_Ethn2*ISMI_Stere,data=quicktable))
tps<-mhhs_data %>% select(contains("tps"))
tps
TRS<-mhhs_data %>% select(contains("trs"))
TRS
trs<-mhhs_data %>% select(contains("trs"))
trs<-trs %>% mutate(across(c(TRS_2,TRS_3,TRS_5,TRS_6),~8-.))
trs<-trs %>% mutate(across(c(TRS_2,TRS_3,TRS_5,TRS_6),~8-.))
trs
trs_scoring<-bfne %>% dplyr::select(TRS_1:TRS_8)
trs_scoring<-trs %>% dplyr::select(TRS_1:TRS_8)
key_trs.list<-list(Total=c(1:8))
key_trs<-make.keys(8,key_trs.list,colnames(trs_scoring))
scales_bfne<-scoreItems(key_bfne.list,bfne_scoring)
key_trs<-make.keys(8,key_trs.list,colnames(trs_scoring))
scales_trs<-scoreItems(key_trs.list,trs_scoring)
summary(scales_trs)
trs<-mhhs_data %>% select(contains("trs"))
trs<-trs %>% mutate(across(c(TRS_2,TRS_3,TRS_5,TRS_6),~8-.))
trs<-mhhs_data %>% select(contains("trs"))
trs_scoring<-trs %>% dplyr::select(TRS_1:TRS_8)
key_trs.list<-list(Total=c(1:8))
key_trs<-make.keys(8,key_trs.list,colnames(trs_scoring))
scales_trs<-scoreItems(key_trs.list,trs_scoring)
summary(scales_trs)
trs_scoring
bfne<-mhhs_data %>% select(contains("bfne"))
bfne<-bfne %>% mutate(across(c(BFNE_2,BFNE_4,BFNE_7,BFNE_10),~6-.))
bfne_scoring<-bfne %>% dplyr::select(bfne1:bfne12)
bfne_scoring<-bfne %>% dplyr::select(BFNE_1:BFNE_12)
key_bfne.list<-list(Total=c(1:12))
key_bfne<-make.keys(12,key_bfne.list,colnames(bfne_scoring))
scales_bfne<-scoreItems(key_bfne.list,bfne_scoring)
summary(scales_bfne)
trs<-mhhs_data %>% select(contains("trs"))
trs<-trs %>% mutate(across(c(TRS_2,TRS_3,TRS_5,TRS_6),~8-.))
trs_scoring<-trs %>% dplyr::select(TRS_1:TRS_8)
key_trs.list<-list(Total=c(1:8))
key_trs<-make.keys(8,key_trs.list,colnames(trs_scoring))
scales_trs<-scoreItems(key_trs.list,trs_scoring)
summary(scales_trs)
trs<-mhhs_data %>% select(contains("trs"))
trs<-trs %>% mutate(across(c(TRS_2,TRS_3,TRS_5,TRS_6),~8-.))
trs_scoring<-trs %>% dplyr::select(TRS_1:TRS_8)
key_trs.list<-list(Total=c(1:8))
key_trs<-make.keys(8,key_trs.list,colnames(trs_scoring))
scales_trs<-scoreItems(key_trs.list,trs_scoring)
summary(scales_trs)
trs %>% gather() %>%  ggplot(aes(y=value,x=key,color=value))+geom_boxplot()+geom_jitter()
trs %>% select(TRS_1:TRS_8) %>% gather() %>%  ggplot(aes(y=value,x=key,color=value))+geom_boxplot()+geom_jitter()
ghsql<-mhhs_data %>% select(contains("GHSQL"))
ghsql$GHSQL_SUI_10_TEXT
ghsql$GHSQL_Pers_10_TEXT
ghsql %>% select(GHSQL_Pers_10_TEXT) %>% filter(GHSQL_Pers_10_TEXT!="")
ghsql %>% select(GHSQL_Pers_10_TEXT) %>% filter(GHSQL_Pers_10_TEXT!=""|GHSQL_SUI_10_TEXT!="")
ghsql %>% select(GHSQL_Pers_10_TEXT,GHSQL_SUI_10_TEXT) %>% filter(GHSQL_Pers_10_TEXT!=""|GHSQL_SUI_10_TEXT!="")
ghsql$GHSQL_SUI_10_TEXT
ghsql %>% select(GHSQL_Pers_10_TEXT,GHSQL_SUI_10_TEXT) %>% filter(GHSQL_Pers_10_TEXT!=""|GHSQL_SUI_10_TEXT!="")
ddi %>% select(DDI_Total) %>% gather() %>%  ggplot(aes(y=value,x=key,color=value))+geom_boxplot()+geom_jitter()
ddi %>% select(DDI_Total) %>% add_column(ghsql$general) %>% gather() %>%  ggplot(aes(y=value,x=key,color=value))+geom_boxplot()+geom_jitter()
ddi %>% select(DDI_Total) %>% add_column(ghsql$General) %>% gather() %>%  ggplot(aes(y=value,x=key,color=value))+geom_boxplot()+geom_jitter()
ddi %>% select(DDI_Total) %>% add_column(ghsql$General)
ddi %>% select(DDI_Total) %>% add_column(ghsql$General)
ddi %>% select(DDI_Total) %>% add_column(ghsql$GHSQL_Pers_1) %>% gather() %>%  ggplot(aes(y=value,x=key,color=value))+geom_boxplot()+geom_jitter()
ghsql<-mhhs_data %>% select(contains("GHSQL"))
ghsql<-ghsql %>% mutate(General=rowSums((select(ghsql,GHSQL_Pers_1:GHSQL_Pers_9,GHSQL_SUI_1:GHSQL_SUI_9)))) %>%
rowwise() %>%
mutate(Personal=sum(c_across(GHSQL_Pers_1:GHSQL_Pers_8)),
Suicide=sum(c_across(GHSQL_SUI_1:GHSQL_SUI_8)),
Informal_all=sum(c(GHSQL_Pers_1,GHSQL_SUI_1,GHSQL_Pers_2,GHSQL_SUI_2,GHSQL_Pers_3,GHSQL_SUI_3,GHSQL_Pers_4,GHSQL_SUI_4)),
Formal_all=sum(c(GHSQL_Pers_5,GHSQL_SUI_5,GHSQL_Pers_6,GHSQL_SUI_6,GHSQL_Pers_7,GHSQL_SUI_7,GHSQL_Pers_8,GHSQL_SUI_8)),
None_all=sum(c(GHSQL_Pers_9,GHSQL_SUI_9))) %>%
ungroup() %>% #remove rowwise grouping
mutate(Personal_z=scale(Personal),Suicide_z=scale(Suicide),Informal_all_z=scale(Informal_all),Formal_all_z=scale(Formal_all),None_all_z=scale(None_all))
#make a dataframe with only the items to be scored/that need reliability
ghsql_scoring<-ghsql %>% dplyr::select(1:9,12:20)
key_ghsql.list<-list(General=c(1:18),Personal=c(1:9),Suicide=c(10:18),Formal=c(5,14,6,15,7,16,8,17),Informal=c(1,10,2,11,3,12,4,13))
key_ghsql<-make.keys(18,key_ghsql.list,colnames(ghsql_scoring))
scales_ghsql<-scoreItems(key_ghsql.list,ghsql_scoring)
summary(scales_ghsql)
#histogram to explore the range
ghsql %>% select(GHSQL_Pers_1:GHSQL_Pers_9) %>% gather() %>% ggplot(aes(y=value,x=key)) + geom_boxplot() + scale_x_discrete(labels=c("Intimate partner", "Friend","Parent","Other relative","MHP","Phone helpline","Doctor","Minister","Not seek help"))+ theme(axis.text.x = element_text(angle=90))
ghsql %>% select(GHSQL_SUI_1:GHSQL_SUI_9) %>% gather() %>% ggplot(aes(y=value,x=key)) + geom_boxplot() + scale_x_discrete(labels=c("Intimate partner", "Friend","Parent","Other relative","MHP","Phone helpline","Doctor","Minister","Not seek help"))+ theme(axis.text.x = element_text(angle=90))
ghsql %>% select(Informal_all_z,Formal_all_z,None_all_z) %>% gather() %>% ggplot(aes(y=value,x=key)) + geom_boxplot() + scale_x_discrete(labels=c("Informal (Pers + Sui)","Formal (Pers + Sui)","None (Pers + Sui)"))+ theme(axis.text.x = element_text(angle=90))
ghsql %>% select(GHSQL_Pers_10_TEXT,GHSQL_SUI_10_TEXT) %>% filter(GHSQL_Pers_10_TEXT!=""|GHSQL_SUI_10_TEXT!="")
ddi %>% select(DDI_Total) %>% add_column(ghsql$Personal)
ddi %>% select(DDI_Total) %>% add_column(ghsql %>% select(Personal)) %>% ggplot(aes(x=DDI_Total,y=Personal))  +geom_point()
ddi %>% select(DDI_Total) %>% add_column(ghsql %>% select(Personal)) %>% ggplot(aes(x=DDI_Total,y=Personal))  +geom_point()+stat_smooth()
ddi %>% select(DDI_Total) %>% add_column(ghsql %>% select(Personal)) %>% ggplot(aes(x=DDI_Total,y=Personal))  +geom_point()+stat_smooth(method = "lm")
ddi %>% select(DDI_Total) %>% add_column(ghsql %>% select(Personal)) %>% ggplot(aes(x=DDI_Total,y=Personal))  +geom_point()+stat_smooth(method = "lm",col="blue")
ddi %>% select(DDI_Total) %>% add_column(ghsql %>% select(Personal,Suicide,General,None_all)) %>% pairs.panels()
ddi %>% select(DDI_Total) %>% add_column(ghsql %>% select(Personal,Suicide,General,None_all)) %>% add_column(mhhs_demotbl %>% (select(Race_Ethn2))) %>% pairs.panels()
ddi %>% select(DDI_Total) %>% add_column(ghsql %>% select(Personal,Suicide,General,None_all)) %>% add_column(mhhs_demotbl %>% select(Race_Ethn2)) %>% pairs.panels()
ddi %>% select(DDI_Total) %>% add_column(ghsql %>% select(Personal,Suicide,General,None_all)) %>% add_column(mhhs_demotbl %>% select(EDUC_Par)) %>% pairs.panels()
ddi %>% select(DDI_Total) %>% add_column(ghsql %>% select(Personal,Suicide,General,None_all)) %>% add_column(mhhs_demotbl %>% select(EDUC_Par, EDUC_Self)) %>% pairs.panels()
ddi %>% select(DDI_Total) %>% add_column(ghsql %>% select(Personal,Suicide,General,None_all)) %>% add_column(mhhs_demotbl %>% select(EDUC_Par, EDUC_Self)) %>% cor.plot()
ddi %>% select(DDI_Total) %>% add_column(ghsql %>% select(Personal,Suicide,General,None_all)) %>% add_column(mhhs_demotbl %>% select(EDUC_Par, EDUC_Self)) %>% cor.plot(.)
ddi %>% select(DDI_Total) %>% add_column(ghsql %>% select(Personal,Suicide,General,None_all)) %>% cor.plot(.)
mhhs_data
library(semPlot)
library(semTools)
library(lavaan)
bifm.lavaan<-'
parent_fam =~ ghsq1 + ghsq2 +ghsq_sui1 + ghsq_sui2
friends_int =~ ghsq3 + ghsq4 + ghsq_sui3 + ghsq_sui4
profess =~ ghsq4 + ghsq5 + ghsq6 + ghsq_sui4 + ghsq_sui5 + ghsq_sui6
Sui =~ ghsq_sui1 + ghsq_sui2 + ghsq_sui3 + ghsq_sui4 + ghsq_sui5 + ghsq_sui6
Pers =~ ghsq1 + ghsq2 + ghsq3 + ghsq4 + ghsq5 + ghsq6
Sui+Pers+parent_fam+friends_int + profess ~ Stigma '
semPaths(semPlotModel(bifm.lavaan), group="latents",color=viridis::cividis(5),nCharNodes = 10,rotation = 4, layout="tree3",sizeLat = 6,sizeMan = 5,bifactor=c("Sui","Pers"),asize=1)
library(semPlot)
library(semTools)
library(lavaan)
bifm.lavaan<-'
parent_fam =~ ghsq1 + ghsq2 +ghsq_sui1 + ghsq_sui2
friends_int =~ ghsq3 + ghsq4 + ghsq_sui3 + ghsq_sui4
profess =~ ghsq4 + ghsq5 + ghsq6 + ghsq_sui4 + ghsq_sui5 + ghsq_sui6
Sui =~ ghsq_sui1 + ghsq_sui2 + ghsq_sui3 + ghsq_sui4 + ghsq_sui5 + ghsq_sui6
Pers =~ ghsq1 + ghsq2 + ghsq3 + ghsq4 + ghsq5 + ghsq6
Sui+Pers+parent_fam+friends_int + profess ~ Stigma '
semPaths(semPlotModel(bifm.lavaan), group="latents",color=viridis::cividis(5),nCharNodes = 10,rotation = 4, layout="tree3",sizeLat = 6,sizeMan = 5,bifactor=c("Sui","Pers"),asize=1)
library(semPlot)
library(semTools)
library(lavaan)
bifm.lavaan<-'
parent_fam =~ ghsq1 + ghsq2 +ghsq_sui1 + ghsq_sui2
friends_int =~ ghsq3 + ghsq4 + ghsq_sui3 + ghsq_sui4
profess =~ ghsq4 + ghsq5 + ghsq6 + ghsq_sui4 + ghsq_sui5 + ghsq_sui6
Sui =~ ghsq_sui1 + ghsq_sui2 + ghsq_sui3 + ghsq_sui4 + ghsq_sui5 + ghsq_sui6
Pers =~ ghsq1 + ghsq2 + ghsq3 + ghsq4 + ghsq5 + ghsq6
Sui+Pers+parent_fam+friends_int + profess ~ Stigma '
semPaths(semPlotModel(bifm.lavaan), group="latents",color=viridis::cividis(5),nCharNodes = 10,rotation = 4, layout="tree3",sizeLat = 6,sizeMan = 5,bifactor=c("Sui","Pers"),asize=1)
(semPlotModel(bifm.lavaan), group="latents",color=viridis::cividis(5),nCharNodes = 10,rotation = 4, layout="tree3",sizeLat = 6,sizeMan = 5,bifactor=c("Sui","Pers"),asize=1)
semPlotModel(bifm.lavaan)
install.packages("MASS")
library(semPlot)
library(semTools)
library(lavaan)
bifm.lavaan<-'
parent_fam =~ ghsq1 + ghsq2 +ghsq_sui1 + ghsq_sui2
friends_int =~ ghsq3 + ghsq4 + ghsq_sui3 + ghsq_sui4
profess =~ ghsq4 + ghsq5 + ghsq6 + ghsq_sui4 + ghsq_sui5 + ghsq_sui6
Sui =~ ghsq_sui1 + ghsq_sui2 + ghsq_sui3 + ghsq_sui4 + ghsq_sui5 + ghsq_sui6
Pers =~ ghsq1 + ghsq2 + ghsq3 + ghsq4 + ghsq5 + ghsq6
Sui+Pers+parent_fam+friends_int + profess ~ Stigma '
semPaths(semPlotModel(bifm.lavaan), group="latents",color=viridis::cividis(5),nCharNodes = 10,rotation = 4, layout="tree3",sizeLat = 6,sizeMan = 5,bifactor=c("Sui","Pers"),asize=1)
library(semPlot)
install.packages("boot")
library(semPlot)
library(semTools)
library(lavaan)
bifm.lavaan<-'
parent_fam =~ ghsq1 + ghsq2 +ghsq_sui1 + ghsq_sui2
friends_int =~ ghsq3 + ghsq4 + ghsq_sui3 + ghsq_sui4
profess =~ ghsq4 + ghsq5 + ghsq6 + ghsq_sui4 + ghsq_sui5 + ghsq_sui6
Sui =~ ghsq_sui1 + ghsq_sui2 + ghsq_sui3 + ghsq_sui4 + ghsq_sui5 + ghsq_sui6
Pers =~ ghsq1 + ghsq2 + ghsq3 + ghsq4 + ghsq5 + ghsq6
Sui+Pers+parent_fam+friends_int + profess ~ Stigma '
semPaths(semPlotModel(bifm.lavaan), group="latents",color=viridis::cividis(5),nCharNodes = 10,rotation = 4, layout="tree3",sizeLat = 6,sizeMan = 5,bifactor=c("Sui","Pers"),asize=1)
library(psych)
library(tidyverse)
library(apaTables)
library(tableone)
library(dplyr)
columnNames<-read.csv("../../01-RawData/MHHS_01182023.csv",header=FALSE)[1,]
read.csv("../../01-RawData/MHHS_01182023.csv",header=FALSE)[1,]
columnNames<-read.csv("../01-RawData/MHHS_01182023.csv",header=FALSE)[1,]
qual_data<-read.csv("../../01-RawData/MHHS_01182023.csv",header=FALSE,col.names = columnNames)[-c(1:3),]
qual_data<-read.csv("../01-RawData/MHHS_01182023.csv",header=FALSE,col.names = columnNames)[-c(1:3),]
qual_data
